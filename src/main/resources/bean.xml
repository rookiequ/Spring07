<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!--配置业务层到spring容器内-->
    <bean id="accountService" class="com.user.service.impl.AccountServiceImpl">
        <property name="accountDAO" ref="accountDAO"></property>
    </bean>

    <!--配置持久层到spring容器内部-->
    <bean id="accountDAO" class="com.user.dao.impl.AccountDAOImpl">
        <property name="dataSource" ref="dataSource"></property>
    </bean>

    <!--配置数据源-->
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"></property>
        <property name="url" value="jdbc:mysql://localhost:3306/springdb01?characterEncoding=UTF-8"></property>
        <property name="username" value="root"></property>
        <property name="password" value="123456"></property>
    </bean>

    <!--1.配置事务管理器-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>
    </bean>

    <!--2.配置事务通知-->
    <!--此时需要导入事务的约束，tx名称空间的约束，同时也需要aop的
        tx:advice:就是用来配置事务通知的
            属性
                id：唯一标识
                transaction-manager：给事务通知提供一个事务管理器的引用
                -->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <!--配置事务属性-->
        <!--5.tx:advice内部
            isolation：用于指定事务的隔离级别，默认是DEFAULT,表示使用数据库的默认隔离级别
            propagation：用于指定事务的传播行为，默认值是REQUIRED,表示一定会有事务，可以设置为SUPPORTS:指支持当前事务
            如果当前没有事务，就以无事务方式提交
            read-only：用于指定事务是否可读
            timeout：用于指定事务超长时间
            rollback-for：用于指定异常，异常发生，事务回滚
            no-rollback-for:异常产生，事务不回滚 -->
        <tx:attributes>
            <tx:method name="*" propagation="REQUIRED" read-only="false"/>
            <tx:method name="find*" propagation="SUPPORTS" read-only="true"/>
        </tx:attributes>
    </tx:advice>

    <!--3.配置AOP中通用的切入点表达式-->
    <aop:config>
        <!--配置切入点表达式-->
        <aop:pointcut id="pt1" expression="execution(* com.user.service.impl.*.*(..))"></aop:pointcut>
        <!--4.建立事务通知和切入点表达式的对应关系-->
        <aop:advisor advice-ref="txAdvice" pointcut-ref="pt1"></aop:advisor>
    </aop:config>
</beans>